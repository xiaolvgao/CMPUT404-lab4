Question 1: What is the link to your github repository for this lab?

https://github.com/xiaolvgao/CMPUT404-lab4


Question 2: After starting a brand new Django application and running the runserver command, what does the browser show you?

It shows "The install worked successfully! Congratulations! The install worked successfully! Congratulations!"


Question 3: After creating the first view within polls, what does the browser show you when navigating to / and to /polls respectively?

For end with / browser shows: Page not fond(404)
For end with /polls browser shows: Hello, world. You're at the polls index.


Question 4: What is a Django migration and why do we need them?

Django migration use for telling Django that there are some changes made to the models and database and store these changes in migration. We need them when we want to read the migration new model
 

Question 5: What do you see after you log into the Django adminstration site? From a high levle, how do you get custom models to appear in the Django admin page

I see "Django administration and Site administration" beside that there are two part "Authentication and Authorization and Polls" that I can edit. In "Authentication and Authorization" administration can add and change Group and User, in "Polls" administration can add and change Choice and Question. On the right hand side there is a Recent actions record administration' s past actions 
If custom models exists in the models.py file you can add them in admin.py


Question 6: What do you see when you go to /polls/38/ in your browser? What about /polls/38/results and /polls/38/vote? What happens when you don’t put a number, and instead use a string? How would you modify the urls.py file to allow arbitrary alphabetic characters?

When I got to /polls/38/ browser shows: You're looking at question 38.
When I got to /polls/38/results browser shows: You're looking at the results of question 38.
When I got to /polls/38/vote browser shows: You're voting on question 38.
path('<int:question_id>/', views.detail, name='detail'), use str instead of int eg:    path('<str:question_id>/', views.detail, name='detail'),

Question 7: Why is it a bad idea to hardcode urls into the templates?

It makes changing URLs harder, and makes linking to the wrong page easier


Question 8: What are the benefits of using Django's generic views over writing views 'the hard way'? When should you use a generic view and when shouldn't you use a generic view?

Use Generic Views can reduce boilerplate code when you repeatedly use similar code in several views.
DetailView shouldn’t be used when your page has forms and does creation or update of objects. FormView, CreateView and UpdateView are more suitable for working with forms, creation or updation of objects. 

